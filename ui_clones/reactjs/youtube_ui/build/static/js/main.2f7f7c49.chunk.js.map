{"version":3,"sources":["components/labelButton/LabelButton.tsx","components/signInButton/SignInButton.tsx","components/navbar/Navbar.tsx","components/sidebarButton/SidebarButton.tsx","components/sidebar/Sidebar.tsx","components/video-thumbnail/VideoThumbnail.tsx","components/content-section/ContentSection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LabelButton","content","label","className","SignInButton","Navbar","searchValue","setSearchValue","src","alt","placeholder","value","onChange","e","target","SidebarButton","icon","title","Sidebar","VideoThumbnail","channel_name","ContentSection","allVideos","useRef","thumbnails","useState","selectedVideos","setSelectedVideos","useEffect","current","filter","video","toUpperCase","includes","map","thumbnail","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f7f7c49.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './LabelButton.css';\r\n\r\ninterface Props {\r\n    content: any;\r\n    label: string;\r\n    className?: string;\r\n}\r\n\r\nexport default function LabelButton({content, label, className}: Props) {\r\n    return <button className={`label-container ${className}`}>{content}<label className=\"label\">{label}</label></button>;\r\n}","import React from \"react\";\r\n\r\nimport \"./SignInButton.css\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\"\r\n\r\nexport default function SignInButton() {\r\n  return (\r\n    <button className=\"sign-in-button\">\r\n      <AccountCircleIcon />\r\n      <span>SIGN IN</span>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport LabelButton from \"../labelButton/LabelButton\";\r\nimport SignInButton from \"../signInButton/SignInButton\";\r\n\r\ninterface Props {\r\n  searchValue: string;\r\n  setSearchValue: Function;\r\n}\r\nexport default function Navbar({searchValue, setSearchValue}: Props) {\r\n  return (\r\n    <nav className=\"navbar-container\">\r\n      <div className=\"logo-section\">\r\n        <MenuIcon className=\"menu\" />\r\n        <img className=\"logo\" src=\"assets/images/logo.png\" alt=\"website logo\" />\r\n        <span className=\"logo-text\">YouTube</span>\r\n        <span className=\"country\">NL</span>\r\n      </div>\r\n\r\n      <div className=\"search-section\">\r\n        <input className=\"searchbar\" placeholder=\"Search\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n        <LabelButton\r\n          label=\"Search\"\r\n          className=\"search-button\"\r\n          content={<SearchIcon />}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"action-section\">\r\n        <LabelButton\r\n          label=\"Create\"\r\n          className=\"record\"\r\n          content={<VideoCallIcon />}\r\n        />\r\n        <LabelButton\r\n          label=\"YouTube Apps\"\r\n          className=\"apps\"\r\n          content={<AppsIcon />}\r\n        />\r\n        <LabelButton\r\n          label=\"Settings\"\r\n          className=\"more\"\r\n          content={<MoreVertIcon />}\r\n        />\r\n\r\n        <SignInButton/>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./SidebarButton.css\";\r\n\r\ninterface Props {\r\n  icon: any;\r\n  label: string;\r\n}\r\nexport default function SidebarButton({ icon, label }: Props) {\r\n  return (\r\n    <button className=\"sidebar-button\" title={label}>\r\n      {icon}\r\n      <span>{label}</span>\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport WhatsHotIcon from \"@material-ui/icons/Whatshot\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport SidebarButton from \"../sidebarButton/SidebarButton\";\r\nimport SignInButton from \"../signInButton/SignInButton\";\r\n\r\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\r\nimport SportsSoccerIcon from \"@material-ui/icons/SportsSoccer\";\r\nimport SportsEsportsIcon from \"@material-ui/icons/SportsEsports\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport ThreeDRotationIcon from \"@material-ui/icons/ThreeDRotation\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\n\r\nexport default function Sidebar() {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <SidebarButton icon={<HomeIcon />} label=\"Home\" />\r\n      <SidebarButton icon={<WhatsHotIcon />} label=\"Trending\" />\r\n      <SidebarButton icon={<SubscriptionsIcon />} label=\"Subscriptions\" />\r\n      <div className=\"divider\"></div>\r\n      <SidebarButton icon={<VideoLibraryIcon />} label=\"Library\" />\r\n      <SidebarButton icon={<HistoryIcon />} label=\"History\" />\r\n      <div className=\"divider\"></div>\r\n      <div className=\"sign-in\">\r\n        <span>Sign in to like videos, comment, and subscribe.</span>\r\n        <SignInButton />\r\n      </div>\r\n      <div className=\"divider\"></div>\r\n      <h2 className=\"sidebar-section-title\">BEST OF YOUTUBE</h2>\r\n      <SidebarButton icon={<MusicNoteIcon />} label=\"Music\" />\r\n      <SidebarButton icon={<SportsSoccerIcon />} label=\"Sports\" />\r\n      <SidebarButton icon={<SportsEsportsIcon />} label=\"Gaming\" />\r\n      <SidebarButton icon={<TheatersIcon />} label=\"Movies\" />\r\n      <SidebarButton icon={<ReceiptIcon />} label=\"News\" />\r\n      <SidebarButton icon={<LiveTvIcon />} label=\"Live\" />\r\n      <SidebarButton icon={<ThreeDRotationIcon />} label=\"360Â° Video\" />\r\n      <div className=\"divider\"></div>\r\n      <SidebarButton icon={<AddIcon />} label=\"Browse channels\" />\r\n      <div className=\"divider\"></div>\r\n      <h2 className=\"sidebar-section-title\">MORE FROM YOUTUBE</h2>\r\n      <SidebarButton icon={<YouTubeIcon />} label=\"YouTube Premium\" />\r\n      <SidebarButton icon={<LiveTvIcon />} label=\"Live\" />\r\n      <div className=\"divider\"></div>\r\n      <SidebarButton icon={<SettingsIcon />} label=\"Settings\" />\r\n      <SidebarButton icon={<FlagIcon />} label=\"Report history\" />\r\n      <SidebarButton icon={<HelpIcon />} label=\"Help\" />\r\n      <SidebarButton icon={<FeedbackIcon />} label=\"Send feedback\" />\r\n      <div className=\"divider\"></div>\r\n      <div className=\"link-block\">\r\n        <a>About</a>\r\n        <a>Press</a>\r\n        <a>Copyright</a>\r\n        <a>Contact us</a>\r\n        <a>Creators</a>\r\n        <a>Advertise</a>\r\n        <a>Developers</a>\r\n      </div>\r\n      <div className=\"link-block\">\r\n        <a>Terms</a>\r\n        <a>PrivacyPolicy & Safety</a>\r\n        <a>Test new features</a>\r\n      </div>\r\n      <p className=\"copyright\">Â© 2020 Google LLC YouTube, a Google company</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./VideoThumbnail.css\";\r\n\r\ninterface Props {\r\n  title?: string;\r\n  channel_name: string;\r\n}\r\n\r\nexport default function VideoThumbnail({\r\n  title = \"Antarctica penguins!\",\r\n  channel_name\r\n}: Props) {\r\n  return (\r\n    <div className=\"video-thumbnail-container\">\r\n      <img className=\"thumbnail\" src=\"assets/images/thumbnail.jpg\" />\r\n      <div className=\"description\">\r\n        <img className=\"channel-icon\" src=\"assets/images/thumbnail.jpg\" />\r\n        <div className=\"details\">\r\n          <h3 className=\"title\">{title}</h3>\r\n          <span>{channel_name}</span>\r\n          <div className=\"views-hours\">\r\n            <span>358K views 1 week ago</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./ContentSection.css\";\r\nimport VideoThumbnail from \"../video-thumbnail/VideoThumbnail\";\r\n\r\nimport thumbnails from \"../../data/thumbnails.json\";\r\n\r\ninterface Props {\r\n  searchValue: string;\r\n}\r\nexport default function ContentSection({ searchValue }: Props) {\r\n  const allVideos = useRef(thumbnails);\r\n  const [selectedVideos, setSelectedVideos] = useState(thumbnails);\r\n\r\n  useEffect(() => {\r\n    setSelectedVideos(\r\n      allVideos.current.filter((video) =>\r\n        video.title.toUpperCase().includes(searchValue.toUpperCase())\r\n      )\r\n    );\r\n  }, [searchValue]);\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <h2 className=\"content-title\">Recommended</h2>\r\n      <div className=\"video-grid\">\r\n        {selectedVideos.map((thumbnail, index) => (\r\n          <VideoThumbnail\r\n            title={thumbnail.title}\r\n            channel_name={thumbnail.channel_name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport ContentSection from \"./components/content-section/ContentSection\";\r\n\r\nfunction App() {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Navbar searchValue={searchValue} setSearchValue={setSearchValue}/>\r\n      <Sidebar />\r\n      <ContentSection searchValue={searchValue} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}