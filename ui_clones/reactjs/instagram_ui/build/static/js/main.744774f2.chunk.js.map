{"version":3,"sources":["component/post/Post.tsx","component/button/Button.tsx","component/content-details/ContentDetails.tsx","component/content/Content.tsx","component/searchbar/Searchbar.tsx","component/navbar/Navbar.tsx","component/comment/Comment.tsx","component/modal/Modal.tsx","component/story/Story.tsx","component/landing/Landing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Post","post","selectPost","onClick","e","className","href","style","backgroundImage","image_url","likes","comments","length","Button","label","primary","ContentDetails","amountOfPosts","openStories","src","Content","posts","map","index","key","Searchbar","searchValue","onSearchValueChange","onChange","target","value","id","document","getElementById","focus","Navbar","Comment","comment","profile_image_url","profile_name","message","Modal","onClose","fontSize","profile_url","description","Story","stories","useState","storyPaused","setStoryPaused","storyIndex","setStoryIndex","storyIndexRef","useRef","getProgressBarClassName","useEffect","video","onended","current","pause","play","story","animationDuration","duration","onMouseDown","onMouseUp","video_url","autoPlay","Landing","setSearchValue","storiesOpen","setStoriesOpen","modalOpen","setModalOpen","undefined","selectedPost","setSelectedPost","allPosts","setAllPosts","filteredPosts","setFilteredPosts","newValue","filter","p","toUpperCase","includes","body","overflow","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.744774f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Post.css\";\r\nimport { Post as PostModel } from \"../../models/post/Post\";\r\n\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport ModeComment from \"@material-ui/icons/ModeComment\";\r\n\r\ninterface Props {\r\n  selectPost: Function;\r\n  post: PostModel;\r\n}\r\n\r\nexport default function Post({ post, selectPost }: Props) {\r\n  function onClick() {\r\n    selectPost(post);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        onClick();\r\n      }}\r\n      className=\"post-container\"\r\n    >\r\n      <div className=\"post\">\r\n        <a href=\"#\" style={{ backgroundImage: `url(${post.image_url})` }} className=\"post-image\"></a>\r\n        <div className=\"post-overlay\">\r\n          <span>\r\n            <Favorite />\r\n            {post.likes}\r\n          </span>\r\n          <span>\r\n            <ModeComment />\r\n            {post.comments.length}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  primary?: boolean;\r\n}\r\nexport default function Button({ label, primary }: Props) {\r\n  if (primary) {\r\n    return <div className=\"button primary-button hoverable\">{label}</div>;\r\n  } else {\r\n    return <div className=\"button secondary-button hoverable\">{label}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./ContentDetails.css\";\r\nimport Button from \"../button/Button\";\r\n\r\ninterface Props {\r\n  amountOfPosts: number;\r\n  openStories: Function;\r\n}\r\n\r\nexport default function ContentDetails({ amountOfPosts, openStories }: Props) {\r\n  return (\r\n    <div className=\"content-details\">\r\n      <div onClick={(e) => openStories()} className=\"cover-image-box\">\r\n        <img src=\"./assets/images/stories-cover.jpg\" />\r\n      </div>\r\n      <div className=\"details\">\r\n        <span className=\"title\">#animals</span>\r\n        <div className=\"amount-of-posts\">\r\n          <span>{amountOfPosts}</span>\r\n          <span>posts</span>\r\n        </div>\r\n        <Button primary label=\"Follow\" />\r\n        <div className=\"hashtags\">\r\n          <span>Related hashtags</span>\r\n          <span>#penguins</span>\r\n          <span>#animals</span>\r\n          <span>#cold</span>\r\n          <span>#nature</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport \"./Content.css\";\r\n\r\nimport Post from \"../post/Post\";\r\nimport { Post as PostModel } from \"../../models/post/Post\";\r\nimport ContentDetails from \"../content-details/ContentDetails\";\r\n\r\ninterface Props {\r\n  posts: PostModel[];\r\n  selectPost: Function;\r\n  openStories: Function;\r\n}\r\n\r\nexport default function Content({ selectPost, posts, openStories }: Props) {\r\n  return (\r\n    <div className=\"content-container\">\r\n      <ContentDetails openStories={openStories} amountOfPosts={posts.length} />\r\n      <div className=\"content\">\r\n        {posts.map((post, index) => (\r\n          <Post key={index} post={post} selectPost={selectPost} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport \"./Searchbar.css\";\r\n\r\ninterface Props {\r\n  searchValue: string;\r\n  onSearchValueChange: Function;\r\n}\r\n\r\nexport default function Searchbar({ searchValue, onSearchValueChange }: Props) {\r\n  return (\r\n    <div className=\"searchbar-container\">\r\n      <input\r\n        onChange={(e) => {\r\n          onSearchValueChange(e.target.value);\r\n        }}\r\n        id=\"searchbar\"\r\n      />\r\n      {searchValue === \"\" && (\r\n        <div\r\n          onClick={(e) => {\r\n            document.getElementById(\"searchbar\")?.focus();\r\n          }}\r\n          className=\"searchbar-placeholder\"\r\n        >\r\n          <SearchIcon id=\"searchbar-placeholder-icon\" />\r\n          <span>Search</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nimport Searchbar from \"../searchbar/Searchbar\";\r\nimport Button from \"../button/Button\";\r\n\r\ninterface Props {\r\n  searchValue: string;\r\n  onSearchValueChange: Function;\r\n}\r\n\r\nexport default function Navbar({ searchValue, onSearchValueChange }: Props) {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <div className=\"navbar\">\r\n        <div className=\"logo-section hoverable\">Instagram</div>\r\n        <div className=\"searchbar-section\">\r\n          <Searchbar searchValue={searchValue} onSearchValueChange={onSearchValueChange} />\r\n        </div>\r\n        <div className=\"actions-section\">\r\n          <Button label=\"Login In\" primary />\r\n          <Button label=\"Sign Up\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Comment.css\";\r\nimport { Comment as CommentModel } from \"../../models/comment/Comment\";\r\n\r\ninterface Props {\r\n  comment: CommentModel;\r\n}\r\n\r\nexport default function Comment({ comment }: Props) {\r\n  return (\r\n    <div className=\"comment-container\">\r\n      <img className=\"profile-image hoverable\" src={comment.profile_image_url} />\r\n      <div>\r\n        <div>\r\n          <span className=\"username hoverable\">{comment.profile_name}</span>\r\n          <span>{comment.message}</span>\r\n        </div>\r\n        <div className=\"comment-details\">\r\n          {comment.likes > 0 && (\r\n            <span className=\"hoverable\">\r\n              {comment.likes} {comment.likes > 1 ? \"Likes\" : \"Like\"}\r\n            </span>\r\n          )}\r\n          <span className=\"hoverable\">Reply</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport \"./Modal.css\";\r\nimport { Post } from \"../../models/post/Post\";\r\nimport Button from \"../button/Button\";\r\nimport MoreHoriz from \"@material-ui/icons/MoreHoriz\";\r\nimport Comment from \"../comment/Comment\";\r\n\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport ModeComment from \"@material-ui/icons/ModeComment\";\r\nimport Send from \"@material-ui/icons/Send\";\r\nimport Bookmark from \"@material-ui/icons/Bookmark\";\r\n\r\ninterface Props {\r\n  post?: Post;\r\n  onClose: Function;\r\n}\r\n\r\nexport default function Modal({ onClose, post }: Props) {\r\n  function onClickModal(element: EventTarget) {\r\n    if ((element as HTMLElement).className === \"modal-container\") onClose();\r\n  }\r\n\r\n  return (\r\n    <div onClick={(e) => onClickModal(e.target)} className=\"modal-container\">\r\n      <div onClick={() => onClose()} className=\"close-modal hoverable\">\r\n        <Close fontSize=\"large\" />\r\n      </div>\r\n      <div className=\"modal\">\r\n        <img className=\"modal-image\" src={post?.image_url} />\r\n        <div className=\"modal-content-section\">\r\n          <div className=\"modal-top-section modal-section\">\r\n            <img className=\"profile-image hoverable\" src={post?.profile_url} />\r\n            <div className=\"username hoverable\">{post?.profile_name}</div>\r\n            <Button label=\"Follow\" />\r\n            <div className=\"spacer\"></div>\r\n            <MoreHoriz className=\"hoverable\" />\r\n          </div>\r\n          <div className=\"modal-comment-section modal-section\">\r\n            <div className=\"comment-container\">\r\n              <img className=\"profile-image hoverable\" src={post?.profile_url} />\r\n              <div>\r\n                <div>\r\n                  <span className=\"username hoverable\">{post?.profile_name}</span>\r\n                  <span>{post?.description}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {post?.comments.map((comment, index) => (\r\n              <Comment comment={comment} />\r\n            ))}\r\n          </div>\r\n          <div className=\"modal-details-section modal-section\">\r\n            <div className=\"detail-actions\">\r\n              <Favorite className=\"hoverable\" />\r\n              <ModeComment className=\"hoverable\" />\r\n              <Send className=\"hoverable\" />\r\n              <div className=\"spacer\"></div>\r\n              <Bookmark className=\"hoverable\" />\r\n            </div>\r\n            <span>{post?.likes} Likes</span>\r\n          </div>\r\n          <div className=\"modal-write-section modal-section\">\r\n            <a href=\"#\">Log in</a> to like or comment\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./Story.css\";\r\n\r\nimport MoreHoriz from \"@material-ui/icons/MoreHoriz\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport { Story as StoryModel } from \"../../models/story/Story\";\r\n\r\ninterface Props {\r\n  onClose: Function;\r\n  stories: StoryModel[];\r\n}\r\n\r\nexport default function Story({ onClose, stories }: Props) {\r\n  const [storyPaused, setStoryPaused] = useState(false);\r\n  const [storyIndex, setStoryIndex] = useState(0);\r\n  const storyIndexRef = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const video = document.getElementById(\"video\") as HTMLVideoElement;\r\n\r\n    if (video) {\r\n      video.onended = (e) => {\r\n        if (storyIndexRef.current === stories.length - 1) {\r\n          onClose();\r\n        } else {\r\n          setStoryIndex((value) => value + 1);\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    storyIndexRef.current = storyIndex;\r\n  }, [storyIndex]);\r\n\r\n  useEffect(() => {\r\n    if (storyPaused) {\r\n      (document.getElementById(\"video\") as HTMLVideoElement).pause();\r\n    } else {\r\n      (document.getElementById(\"video\") as HTMLVideoElement).play();\r\n    }\r\n  }, [storyPaused]);\r\n\r\n  function onClickStory(element: EventTarget) {\r\n    if ((element as HTMLElement).className === \"story-container\") onClose();\r\n  }\r\n\r\n  function getProgressBarClassName(index: number) {\r\n    if (index < storyIndex) {\r\n      return \"progress-bar progress-bar-finished\";\r\n    } else if (index === storyIndex) {\r\n      return storyPaused ? \"progress-bar progress-bar-active progress-bar-paused\" : \"progress-bar progress-bar-active\";\r\n    } else {\r\n      return \"progress-bar\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={(e) => onClickStory(e.target)} className=\"story-container\">\r\n      <div className=\"story\">\r\n        <div className=\"title\">\r\n          <img src=\"./assets/images/stories-cover.jpg\" />\r\n          <div className=\"details\">\r\n            <span>#penguin</span>\r\n            <span>username</span>\r\n          </div>\r\n          <div className=\"spacer\"></div>\r\n          {storyPaused && <div className=\"pause\">PAUSED</div>}\r\n          <MoreHoriz />\r\n        </div>\r\n        <div className=\"progress-bars\">\r\n          {stories.map((story, index) => (\r\n            <div className=\"progress-bar-container\">\r\n              <div style={{ animationDuration: `${story.duration}s` }} className={getProgressBarClassName(index)}></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"video\">\r\n          <video onMouseDown={(e) => setStoryPaused(true)} onMouseUp={(e) => setStoryPaused(false)} id=\"video\" src={stories[storyIndex].video_url} autoPlay></video>\r\n          {storyIndex !== 0 && <ChevronLeft onClick={(e) => setStoryIndex((value) => value - 1)} className=\"previous hoverable\" />}\r\n          {storyIndex !== stories.length - 1 && <ChevronRight onClick={(e) => setStoryIndex((value) => value + 1)} className=\"next hoverable\" />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Landing.css\";\r\nimport Content from \"../content/Content\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport { Post } from \"../../models/post/Post\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nimport posts from \"../../data/posts/posts.json\";\r\nimport stories from \"../../data/stories/stories.json\";\r\n\r\nimport Story from \"../story/Story\";\r\n\r\nexport default function Landing() {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [storiesOpen, setStoriesOpen] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [selectedPost, setSelectedPost] = useState<Post | undefined>(undefined);\r\n  const [allPosts, setAllPosts] = useState<Post[]>([]);\r\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\r\n\r\n  useEffect(() => {\r\n    setAllPosts([...allPosts, ...posts]);\r\n    setFilteredPosts([...filteredPosts, ...posts]);\r\n  }, []);\r\n\r\n  function openStories() {\r\n    setStoriesOpen(true);\r\n  }\r\n\r\n  function closeStory() {\r\n    setStoriesOpen(false);\r\n  }\r\n\r\n  function selectPost(post: Post) {\r\n    setSelectedPost(post);\r\n    setModalOpen(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  }\r\n\r\n  function closeModal() {\r\n    setModalOpen(false);\r\n    document.body.style.overflow = \"auto\";\r\n  }\r\n\r\n  function onSearchValueChange(newValue: string) {\r\n    setSearchValue(newValue);\r\n\r\n    let filteredPosts = allPosts.filter((p) => p.description.toUpperCase().includes(newValue.toUpperCase()));\r\n\r\n    setFilteredPosts([...filteredPosts]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar searchValue={searchValue} onSearchValueChange={onSearchValueChange} />\r\n      <Content openStories={openStories} posts={filteredPosts} selectPost={selectPost} />\r\n      {modalOpen && <Modal post={selectedPost} onClose={closeModal} />}\r\n      {storiesOpen && <Story stories={stories} onClose={closeStory} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Landing from './component/landing/Landing';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Landing/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}