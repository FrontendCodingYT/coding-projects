{"version":3,"sources":["components/navbar/logo/Logo.tsx","components/navbar/searchbar/Searchbar.tsx","components/button/Button.tsx","components/navbar/actions/Actions.tsx","components/navbar/Navbar.tsx","components/content/trending-today/TrendingToday.tsx","components/video/Video.tsx","components/content/posts/Posts.tsx","components/content/main-bar/MainBar.tsx","components/content/community/Community.tsx","components/content/side-bar/SideBar.tsx","components/content/Content.tsx","components/landing/Landing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","className","src","Searchbar","htmlFor","id","placeholder","Button","primary","secondary","tertiary","label","Actions","Navbar","TrendingToday","trendingItems","map","item","index","style","backgroundImage","image_src","title","description","subreddit","name","Video","duration","useState","time","setTime","playing","setPlaying","useEffect","video","document","getElementById","slider","addEventListener","e","currentTime","Math","round","value","parseInt","play","pause","onClick","type","Posts","posts","post","upvotes","username","video_src","comments","MainBar","Community","communties","community","SideBar","Content","Landing","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9b4a4376.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Logo.css\";\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <div className=\"logo hoverable\">\r\n      <img src=\"./assets/images/reddit_logo.jpg\" />\r\n      <span>reddit</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Searchbar.css\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nexport default function Searchbar() {\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <label htmlFor=\"searchbar\">\r\n        <SearchIcon />\r\n      </label>\r\n      <input id=\"searchbar\" placeholder=\"Search\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Button.css\";\r\n\r\ninterface Props {\r\n  primary?: boolean;\r\n  secondary?: boolean;\r\n  tertiary?: boolean;\r\n  label: string;\r\n}\r\n\r\nexport default function Button({ primary, secondary, tertiary, label }: Props) {\r\n  if (tertiary) {\r\n    return <div className=\"button tertiary-button\">{label}</div>;\r\n  } else if (secondary) {\r\n    return <div className=\"button secondary-button\">{label}</div>;\r\n  } else {\r\n    return <div className=\"button primary-button\">{label}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Actions.css\";\r\nimport Button from \"../../button/Button\";\r\n\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nexport default function Actions() {\r\n  return (\r\n    <div className=\"actions\">\r\n      <Button secondary label=\"LOG IN\" />\r\n      <Button label=\"SIGN UP\" />\r\n      <div className=\"profile\">\r\n        <PersonIcon className=\"hoverable\" />\r\n        <ArrowDropDownIcon className=\"hoverable\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Navbar.css';\r\nimport Logo from './logo/Logo';\r\nimport Searchbar from './searchbar/Searchbar';\r\nimport Actions from './actions/Actions';\r\n\r\nexport default function Navbar() {\r\n    return <div className=\"navbar\">\r\n        <Logo/>\r\n        <Searchbar/>\r\n        <Actions/>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nimport \"./TrendingToday.css\";\r\n\r\nimport trendingItems from \"../../../data/trending-items/trending-items.json\";\r\n\r\nexport default function TrendingToday() {\r\n  return (\r\n    <div className=\"trending-today-section\">\r\n      <span className=\"title\">Trending today</span>\r\n      <div className=\"items\">\r\n        {trendingItems.map((item, index) => (\r\n          <div className=\"trending-item hoverable\" style={{ backgroundImage: `linear-gradient(to top, rgba(0, 0, 0, 0.7) 35%, transparent), url(${item.image_src})` }}>\r\n            <div className=\"context\">\r\n              <span className=\"title\">{item.title}</span>\r\n              <br />\r\n              <span className=\"description\">{item.description}</span>\r\n              <div className=\"subreddit\">\r\n                <img src={item.subreddit.image_src} />\r\n                <span>r/{item.subreddit.name}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./Video.css\";\r\n\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport VolumeOff from \"@material-ui/icons/VolumeOff\";\r\n\r\ninterface Props {\r\n  src: string;\r\n  duration: number;\r\n}\r\n\r\nexport default function Video({ src, duration }: Props) {\r\n  const [time, setTime] = useState(0);\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const video = document.getElementById(\"video-player\") as HTMLVideoElement;\r\n\r\n    const slider = document.getElementById(\"video-slider\") as HTMLInputElement;\r\n\r\n    video.addEventListener(\"timeupdate\", (e) => {\r\n      let time = (100 / video.duration) * video.currentTime;\r\n\r\n      setTime(Math.round(video.currentTime));\r\n\r\n      slider.value = `${time}`;\r\n    });\r\n\r\n    slider.addEventListener(\"change\", (e) => {\r\n      let sliderValue: number = parseInt(slider.value);\r\n\r\n      let time = sliderValue / (100 / video.duration);\r\n\r\n      video.currentTime = time;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = document.getElementById(\"video-player\") as HTMLVideoElement;\r\n\r\n    if (video) {\r\n      if (!playing) {\r\n        video.pause();\r\n      } else {\r\n        video.play();\r\n      }\r\n    }\r\n  }, [playing]);\r\n\r\n  return (\r\n    <div id=\"video-container\">\r\n      <video id=\"video-player\" src={src} />\r\n      <div id=\"video-controls\">\r\n        <div className=\"video-controls-background\"></div>\r\n        <button className=\"video-button video-control\">\r\n          <img className=\"reddit-logo\" src=\"assets/images/reddit_logo.jpg\" />\r\n        </button>\r\n        <button onClick={(e) => setPlaying((value) => !value)} className=\"video-button video-control\">\r\n          {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n        </button>\r\n        <span className=\"video-control\">{time}</span>\r\n        <input id=\"video-slider\" className=\"video-control\" type=\"range\"></input>\r\n        <span className=\"video-control\">{duration}</span>\r\n        <button className=\"video-button video-control\">\r\n          <SettingsIcon />\r\n        </button>\r\n        <button className=\"video-button video-control\">\r\n          <FullscreenIcon />\r\n        </button>\r\n        <button className=\"video-button video-control-always-present\">\r\n          <VolumeOff />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Posts.css\";\r\n\r\nimport posts from \"../../../data/posts/posts.json\";\r\n\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport Button from \"../../button/Button\";\r\n\r\nimport ModeCommentIcon from \"@material-ui/icons/ModeComment\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Video from \"../../video/Video\";\r\n\r\nexport default function Posts() {\r\n  return (\r\n    <div className=\"posts-wrapper\">\r\n      {posts.map((post, index) => (\r\n        <div className=\"post\">\r\n          <div className=\"post-sidebar\">\r\n            <ArrowUpwardIcon className=\"upvote\" />\r\n            <span>{post.upvotes}</span>\r\n            <ArrowDownwardIcon className=\"downvote\" />\r\n          </div>\r\n          <div className=\"post-title\">\r\n            <img src={post.subreddit.image_src} />\r\n            <span className=\"subreddit-name\">r/{post.subreddit.name}</span>\r\n            <span className=\"post-user\">Posted by</span>\r\n            <span className=\"post-user underline\">u/{post.username}</span>\r\n            <div className=\"spacer\"></div>\r\n            <Button label=\"+ JOIN\" />\r\n          </div>\r\n          <div className=\"post-body\">\r\n            <span className=\"title\">{post.title}</span>\r\n            {post.video_src && <Video src={post.video_src} duration={post.duration} />}\r\n            {post.image_src && <img src={post.image_src} />}\r\n            {post.description && <span className=\"description\">{post.description}</span>}\r\n          </div>\r\n          <div className=\"post-footer\">\r\n            <div className=\"comments footer-action\">\r\n              <ModeCommentIcon className=\"comment-icon\" />\r\n              <span>{post.comments} Comments</span>\r\n            </div>\r\n            <div className=\"share footer-action\">\r\n              <ShareIcon />\r\n              <span>Share</span>\r\n            </div>\r\n            <div className=\"save footer-action\">\r\n              <BookmarkIcon />\r\n              <span>Save</span>\r\n            </div>\r\n            <MoreHorizIcon className=\"more-icon footer-action\" />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Whatshot from \"@material-ui/icons/Whatshot\";\r\nimport NewReleases from \"@material-ui/icons/NewReleases\";\r\nimport TrendingUp from \"@material-ui/icons/TrendingUp\";\r\nimport Menu from \"@material-ui/icons/Menu\";\r\nimport MoreHoriz from \"@material-ui/icons/MoreHoriz\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nimport \"./MainBar.css\";\r\nimport Posts from \"../posts/Posts\";\r\n\r\nexport default function MainBar() {\r\n  return (\r\n    <div className=\"main-bar\">\r\n      <div className=\"update-card\">\r\n        <div className=\"top-section\">\r\n          <span>UPDATES FROM REDDIT</span>\r\n          <CloseIcon className=\"hoverable\" />\r\n        </div>\r\n        <div className=\"body hoverable\">\r\n          <div className=\"context\">\r\n            <span className=\"title\">Keep yourself safe and informed</span>\r\n            <br />\r\n            <span className=\"description\">Visit r/Coronavirus to talk about COVID-19, and visit www.who.int for more information.</span>\r\n          </div>\r\n          <img src=\"./assets/images/pin.jpg\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter-element hoverable\">\r\n          <Whatshot />\r\n          <span>Hot</span>\r\n        </div>\r\n        <div className=\"filter-element hoverable\">\r\n          <span>Everywhere</span>\r\n          <ArrowDropDown />\r\n        </div>\r\n        <div className=\"filter-element-secondary hoverable\">\r\n          <NewReleases />\r\n          <span>New</span>\r\n        </div>\r\n        <div className=\"filter-element-secondary hoverable\">\r\n          <TrendingUp />\r\n          <span>Top</span>\r\n        </div>\r\n        <MoreHoriz className=\"filter-element-tertiary hoverable\" />\r\n        <div className=\"spacer\"></div>\r\n        <div className=\"filter-element-menu hoverable\">\r\n          <Menu />\r\n          <ArrowDropDown />\r\n        </div>\r\n      </div>\r\n\r\n      <Posts />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Community.css\";\r\n\r\nimport communties from \"../../../data/communties/communities.json\";\r\n\r\nimport ArrowDropUp from \"@material-ui/icons/ArrowDropUp\";\r\nimport Button from \"../../button/Button\";\r\n\r\nexport default function Community() {\r\n  return (\r\n    <div className=\"community-section\">\r\n      <div className=\"title\">\r\n        <span className=\"hoverable\">Today's Top Growing Communities</span>\r\n      </div>\r\n      <div className=\"communities-wrapper\">\r\n        {communties.map((community, index) => (\r\n          <div className=\"community hoverable\">\r\n            <span>{index + 1}</span>\r\n            <ArrowDropUp />\r\n            <img src={community.image_src} />\r\n            <span className=\"name\">r/{community.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"action-buttons\">\r\n        <Button primary label=\"VIEW ALL\" />\r\n        <div className=\"secondary-buttons\">\r\n          <Button tertiary label=\"Sports\" />\r\n          <Button tertiary label=\"News\" />\r\n          <Button tertiary label=\"Gaming\" />\r\n          <Button tertiary label=\"Aww\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./SideBar.css\";\r\nimport Community from \"../community/Community\";\r\n\r\nexport default function SideBar() {\r\n  return (\r\n    <div className=\"side-bar\">\r\n      <Community />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Content.css\";\r\nimport TrendingToday from \"./trending-today/TrendingToday\";\r\nimport MainBar from \"./main-bar/MainBar\";\r\nimport SideBar from \"./side-bar/SideBar\";\r\n\r\nexport default function Content() {\r\n  return (\r\n    <div className=\"content\">\r\n      <TrendingToday />\r\n      <div className=\"bars-wrapper\">\r\n        <span className=\"popular-posts-title\">Popular posts</span>\r\n        <div className=\"bars-wrapper-inside\">\r\n          <MainBar />\r\n          <SideBar />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Landing.css\";\r\nimport Navbar from \"../navbar/Navbar\";\r\nimport Content from \"../content/Content\";\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Content/>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Landing from \"./components/landing/Landing\";\r\n\r\nfunction App() {\r\n  return <Landing />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}